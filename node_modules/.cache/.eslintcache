[{"C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\index.js":"1","C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\App.js":"2","C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\ToDoList.js":"3","C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\ShoppingCart.js":"4","C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\Home.js":"5","C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\About.js":"6","C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\Contact.js":"7"},{"size":212,"mtime":1689661914951,"results":"8","hashOfConfig":"9"},{"size":1043,"mtime":1689764004080,"results":"10","hashOfConfig":"9"},{"size":4097,"mtime":1689757085442,"results":"11","hashOfConfig":"9"},{"size":5938,"mtime":1689756881443,"results":"12","hashOfConfig":"9"},{"size":631,"mtime":1689755738779,"results":"13","hashOfConfig":"9"},{"size":1275,"mtime":1689755593078,"results":"14","hashOfConfig":"9"},{"size":3521,"mtime":1689755069510,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1fbqxdb",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\index.js",[],[],[],"C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\App.js",[],[],"C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\ToDoList.js",[],[],"C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\ShoppingCart.js",["40","41"],[],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ShoppingCart() {\r\n  const [data, setData] = useState([]);\r\n\r\n  let dataAPI = `https://api.pexels.com/v1/curated`;\r\n  const API_KEY = \"IRFfLTybS2GdykQ5nnk5Hm5HsFlnV4LfdPZ2hCGaURvB0HhTpKIprJ13\";\r\n\r\n  // Fetch data from the API and update the state\r\n  let movieData = async () => {\r\n    try {\r\n      let response = await axios\r\n        .get(dataAPI, {\r\n          headers: {\r\n            Authorization: API_KEY,\r\n          },\r\n        })\r\n        .then((res) => res.data.photos)\r\n        .then((e) => setData(e));\r\n    } catch (err) {\r\n      console.error(err, \"err\");\r\n    }\r\n  };\r\n\r\n  // Fetch data when the component mounts\r\n  useEffect(() => {\r\n    movieData();\r\n    console.log(data);\r\n  }, []);\r\n\r\n  //Checkout implementation\r\n  // State to store the selected items in the cart\r\n  const [checkouItem, setCheckoutItem] = useState([]);\r\n\r\n  // Function to add an item to the cart\r\n  let addToCart = (id) => {\r\n    let selectedItem = data.find((e) => e.id === id);\r\n    if (!checkouItem.includes(selectedItem)) {\r\n      setCheckoutItem([...checkouItem, selectedItem]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(checkouItem);\r\n  }, [checkouItem]);\r\n\r\n  // Calculate the total price of the items in the cart\r\n  let checkOutTotal = () => {\r\n    let total = checkouItem.length * 100;\r\n    return total;\r\n  };\r\n\r\n  // Remove an item from the cart\r\n  let removeCartItems = (id) => {\r\n    setCheckoutItem(checkouItem.filter((e) => e.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"2rem\" }}>\r\n      <h2>Shopping Cart</h2>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div style={{ width: \"70%\" }}>\r\n          <div className=\"row\">\r\n            {data\r\n              ? data.map((e) => {\r\n                  return (\r\n                    <div\r\n                      className=\"col-lg-4 col-md-6 col-sm-12 mb-3\"\r\n                      key={e.id}\r\n                    >\r\n                      <Card\r\n                        key={e.id}\r\n                        sx={{ margin: \"1rem\", backgroundColor: \"#0B7189\" }}\r\n                      >\r\n                        <CardMedia\r\n                          sx={{ height: 150 }}\r\n                          image={e.src.original}\r\n                          title={e.photographer}\r\n                        />\r\n                        <CardContent>\r\n                          <Typography sx={{ fontWeight: 750 }}>\r\n                            {e.photographer}\r\n                          </Typography>\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              margin: \"1rem 0 0 0    \",\r\n                            }}\r\n                          >\r\n                            <Typography>Price:$100</Typography>\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              size=\"small\"\r\n                              sx={{ backgroundColor: \"#C19AB7\" }}\r\n                              onClick={() => addToCart(e.id)}\r\n                            >\r\n                              Add to cart\r\n                            </Button>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </div>\r\n                  );\r\n                })\r\n              : \"Loading\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ width: \"30%\" }}>\r\n          <Card sx={{ backgroundColor: \"#DBD3D8\" }}>\r\n            <CardContent>\r\n              <h3>Checkout</h3>\r\n              {checkouItem.map((e) => {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Typography>Item name</Typography>{\" \"}\r\n                      <Typography>{e.photographer}</Typography>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        marginBottom: \"1rem\",\r\n                      }}\r\n                    >\r\n                      <Typography>Price</Typography>{\" \"}\r\n                      <Typography>$100</Typography>\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => removeCartItems(e.id)}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n\r\n              <hr />\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Typography sx={{ fontSize: \"23px\", fontWeight: \"700\" }}>\r\n                  Total Items\r\n                </Typography>{\" \"}\r\n                <Typography>{checkouItem.length}</Typography>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Typography sx={{ fontSize: \"23px\", fontWeight: \"700\" }}>\r\n                  Total Price\r\n                </Typography>{\" \"}\r\n                <Typography>${checkOutTotal()}</Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShoppingCart;\r\n","C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\Home.js",[],[],"C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\About.js",[],[],"C:\\Separate disk\\Coding\\VS code\\Ambula assignment\\my_app\\src\\component\\Contact.js",["42"],[],"import {\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    TextField,\r\n    Typography,\r\n  } from \"@mui/material\";\r\n  import React, { useState } from \"react\";\r\n  \r\n  function Contact() {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [errors, setErrors] = useState({\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n    });\r\n  \r\n    const validateForm = () => {\r\n      let valid = true;\r\n      const newErrors = { name: \"\", email: \"\", message: \"\" };\r\n  \r\n      if (name.trim() === \"\") {\r\n        newErrors.name = \"Please enter your name\";\r\n        valid = false;\r\n      }\r\n  \r\n      if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n        newErrors.email = \"Please enter a valid email address\";\r\n        valid = false;\r\n      }\r\n  \r\n      if (message.trim() === \"\") {\r\n        newErrors.message = \"Please enter a message\";\r\n        valid = false;\r\n      }\r\n  \r\n      setErrors(newErrors);\r\n      return valid;\r\n    };\r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      if (validateForm()) {\r\n        console.log(\"Name:\", name);\r\n        console.log(\"Email:\", email);\r\n        console.log(\"Message:\", message);\r\n        setSubmitted(true);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: \"2rem\",\r\n        }}\r\n      >\r\n        <h2>Contact Us</h2>\r\n        {submitted ? (\r\n          <p>Thank you for your message! We will get back to you soon.</p>\r\n        ) : (\r\n          <div>\r\n            <Card>\r\n              <CardContent>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    placeholder=\"Name\"\r\n                    sx={{ margin: \"1rem\" }}\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    error={!!errors.name}\r\n                    helperText={errors.name}\r\n                    required\r\n                  />\r\n                  <TextField\r\n                    placeholder=\"Email\"\r\n                    sx={{ margin: \"1rem\" }}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    error={!!errors.email}\r\n                    helperText={errors.email}\r\n                    required\r\n                  />\r\n                  <TextField\r\n                    multiline\r\n                    placeholder=\"Message\"\r\n                    sx={{ margin: \"1rem\" }}\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    error={!!errors.message}\r\n                    helperText={errors.message}\r\n                    required\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Contact;\r\n  ",{"ruleId":"43","severity":1,"message":"44","line":20,"column":11,"nodeType":"45","messageId":"46","endLine":20,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":37,"column":6,"nodeType":"49","endLine":37,"endColumn":8,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"51","line":6,"column":5,"nodeType":"45","messageId":"46","endLine":6,"endColumn":15},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'movieData'. Either include them or remove the dependency array.","ArrayExpression",["52"],"'Typography' is defined but never used.",{"desc":"53","fix":"54"},"Update the dependencies array to be: [data, movieData]",{"range":"55","text":"56"},[884,886],"[data, movieData]"]